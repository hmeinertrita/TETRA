* {
    box-sizing: content-box;
}

body {
    width: 100vw;
    height: 100vh;
    margin: 0;
    border: 0;
    padding: 0;
    background-color: #17183B;
}

#origin {
    position: absolute;
    top: 50%;
    left: 50%;
    transform-style: preserve-3d;
    transform-origin: center;
    animation: origin-rotate 60s ease-in-out infinite;
}

.line {
    transform-style: preserve-3d;
    position: absolute;
    transform-origin: top center;

    --delta-x: calc(var(--x2) - var(--x1));
    --delta-y: calc(var(--y2) - var(--y1));
    --delta-z: calc(var(--z2) - var(--z1));

    --pos-x: calc(var(--x1) * 1px);
    --pos-y: calc(var(--y1) * 1px);
    --pos-z: calc(var(--z1) * 1px);
    transform: translate3d(var(--pos-x), var(--pos-y), var(--pos-z));

    .rotation {
        transform-style: preserve-3d;
        position: absolute;
        transform-origin: top center;
    
        --axis-x: var(--delta-z);
        --axis-y: 0;
        --axis-z: calc(var(--delta-x) * -1);
    
        --dot-product: var(--delta-y);
    
        --sqrt-x: calc((var(--delta-x) * var(--delta-x)) + (var(--delta-y) * var(--delta-y)) + (var(--delta-z) * var(--delta-z)));
        --ratio: calc(var(--dot-product) / var(--sqrt));
    
        --angle: calc(var(--arccos) * 1rad);
    
        transform: rotate3d(var(--axis-x), var(--axis-y), var(--axis-z), var(--angle));
    }

    .end {
        --pos-x: calc(var(--delta-x) * 1px);
        --pos-y: calc(var(--delta-y) * 1px);
        --pos-z: calc(var(--delta-z) * 1px);
        transform: translate3d(var(--pos-x), var(--pos-y), var(--pos-z));
    }

    .segment {
        transform-style: preserve-3d;
        position: absolute;
        transform-origin: top center;
    
        height: calc(var(--sqrt) * 1px);
        width: calc(var(--width) * 1px);
        background-color: var(--colour);
        transform: translateX(calc(var(--width) * -0.5px));
    }

    .cap {
        transform-style: preserve-3d;
        position: absolute;
        transform-origin: center;
        background-color: var(--colour);
        width: calc(var(--width) * 1px);
        height: calc(var(--width) * 1px);
        border-radius: 50%;
        transform: translateX(calc(var(--width) * -0.5px)) translateY(calc(var(--width) * -0.5px));

        .rot {
            transform: rotateX(45deg) rotateY(45deg) rotateZ(45deg);
        }
    }
}

.rot {
    transform-style: preserve-3d;
    position: absolute;
    transform-origin: center;

    height: 100%;
    width: 100%;
    background-color: inherit;
    border-radius: inherit;
    border: inherit;

    transform: rotateY(45deg);
}

.tetrahedron {
    transform-style: preserve-3d;
    position: absolute;
    transform-origin: center;
    --one-over-root-2: 0.707106781187;

    /* Point 1 */
    --v1-x: calc(var(--size) * -1);
    --v1-y: 0;
    --v1-z: calc(var(--size) * var(--one-over-root-2) * -1);

    /* Point 2 */
    --v2-x: var(--size);
    --v2-y: 0;
    --v2-z: calc(var(--size) * var(--one-over-root-2) * -1);

    /* Point 3 */
    --v3-x: 0;
    --v3-y: calc(var(--size) * -1);
    --v3-z: calc(var(--size) * var(--one-over-root-2));

    /* Point 4 */
    --v4-x: 0;
    --v4-y: var(--size);
    --v4-z: calc(var(--size) * var(--one-over-root-2));

    &#visualizer {
        /* Point 1 */
        --v1-x: calc(var(--v1-mult) * var(--size) * -1);
        --v1-z: 0;
        --v1-y: calc(var(--v1-mult) * var(--size) * var(--one-over-root-2) * -1);
    
        /* Point 2 */
        --v2-x: calc(var(--v2-mult) * var(--size));
        --v2-z: 0;
        --v2-y: calc(var(--v2-mult) * var(--size) * var(--one-over-root-2) * -1);
    
        /* Point 3 */
        --v3-x: 0;
        --v3-z: calc(var(--v3-mult) * var(--size) * -1);
        --v3-y: calc(var(--v3-mult) * var(--size) * var(--one-over-root-2));
    
        /* Point 4 */
        --v4-x: 0;
        --v4-z: calc(var(--v4-mult) * var(--size));
        --v4-y: calc(var(--v4-mult) * var(--size) * var(--one-over-root-2));
    }

    @for $i from 1 through 3 {
        @for $j from ($i + 1) through 4 {
            .line.edge-v#{$i}-v#{$j} {
                --x1: var(--v#{$i}-x);
                --y1: var(--v#{$i}-y);
                --z1: var(--v#{$i}-z);

                --x2: var(--v#{$j}-x);
                --y2: var(--v#{$j}-y);
                --z2: var(--v#{$j}-z);
            }
        }
    }
}

.button {
    position: absolute;
    top: 50%;
    left: calc(50% - 400px);
    transform-style: preserve-3d;
    transform-origin: center;
    background-color: transparent;
    border: 0;
    border-radius: 50%;
    width: 100px;
    height: 100px;
    padding: 0;
    margin: 0;
    color: var(--colour);
    cursor: pointer;
    transform: translate(-50%, -50%);

    span {
        transform-style: preserve-3d;
        transform-origin: top left;
        background-color: transparent;
        position: absolute;
        font-family: 'Space Mono', monospace;
        font-size: 16px;
        top: 150%;
        right: 50%;
        transform: translate(50%, -50%);
        font-weight: bolder;
    }

    .tetrahedron {
        transition: transform 2s, left 0.1s;
        transition-timing-function: ease-out !important;
        left: 50%;
    }
}



#upload-button {
    left: calc(50% + 400px);

    #upload-tetra {
        transform: rotateX(0.25turn) rotateY(0.5turn) rotateZ(0.25turn);
        top: 50%;
    }

    &:hover #upload-tetra {
        transition: transform 20s, left 4s;
        transform: rotateX(2.25turn) rotateY(2.5turn) rotateZ(2.25turn);
    }
}

#play-button {
    #play-tetra {
        transform: rotateX(0.25turn) rotateY(0.75turn) rotateZ(0.25turn);
        left: calc(50% + 8px);
    }

    &:hover #play-tetra {
        transition: transform 20s, left 4s;
        transform: rotateX(2.25turn) rotateY(2.75turn) rotateZ(2.25turn);
        left: 50%;
    }

    &.paused {
        #play-tetra {
            transition: transform 2s, left 0.1s;
            transform: rotateX(0.0turn) rotateY(0.5turn) rotateZ(0.125turn);
            left: 50%;
        }

        &:hover #play-tetra {
            transition: transform 20s, left 4s;
            transform: rotateX(2turn) rotateY(2turn) rotateZ(2.125turn);
        }
    }
}

@keyframes origin-rotate {
    0% {
        transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    }
    10% {
        transform: rotateX(90deg) rotateY(-90deg) rotateZ(-120deg);
    }
    15% {
        transform: rotateX(90deg) rotateY(-90deg) rotateZ(-120deg);
    }
    22.5% {
        transform: rotateX(0deg) rotateY(90deg) rotateZ(90deg);
    }
    27.5% {
        transform: rotateX(0deg) rotateY(90deg) rotateZ(90deg);
    }
    35% {
        transform: rotateX(180deg) rotateY(180deg) rotateZ(0deg);
    }
    40% {
        transform: rotateX(180deg) rotateY(180deg) rotateZ(0deg);
    }
    47.5% {
        transform: rotateX(270deg) rotateY(90deg) rotateZ(180deg);
    }
    52.5% {
        transform: rotateX(270deg) rotateY(90deg) rotateZ(180deg);
    }
    60% {
        transform: rotateX(00deg) rotateY(180deg) rotateZ(90deg);
    }
    65% {
        transform: rotateX(00deg) rotateY(180deg) rotateZ(90deg);
    }
    72.5% {
        transform: rotateX(180deg) rotateY(180deg) rotateZ(180deg);
    }
    77.5% {
        transform: rotateX(180deg) rotateY(180deg) rotateZ(180deg);
    }
    85% {
        transform: rotateX(360deg) rotateY(360deg) rotateZ(180deg);
    }
    90% {
        transform: rotateX(360deg) rotateY(360deg) rotateZ(180deg);
    }
    97.5% {
        transform: rotateX(0deg) rotateY(360deg) rotateZ(360deg);
    }
    100% {
        transform: rotateX(0deg) rotateY(360deg) rotateZ(360deg);
    }
}